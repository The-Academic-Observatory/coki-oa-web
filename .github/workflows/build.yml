name: Build and Deploy

on:
  repository_dispatch:
    types:
      - data-update/develop
      - data-update/staging
      - data-update/production
  push:
    tags:
      - '*'
    branches:
      - develop
      - main
      - INF-334/github-action

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Print variable
        run: |
          echo ${{ github.event.action }}

      - name: Set environment develop
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/INF-334/github-action' || github.event.action == 'data-update/develop'
        run: |
          echo "ENVIRONMENT=develop" >> $GITHUB_ENV

      - name: Set environment staging
        if: github.ref == 'refs/heads/main' || github.event.action == 'data-update/staging'
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV

      - name: Set environment production
        if: startsWith(github.ref, 'refs/tags/v') || github.event.action == 'data-update/production'
        run: |
          echo "ENVIRONMENT=production" >> $GITHUB_ENV

      - name: Checkout on push
        if: github.event.action == 'push'
        uses: actions/checkout@v2

      - name: Set ref develop
        if: github.event.action == 'data-update-develop'
        run: |
          echo "REPO_DISPATCH_REF=develop" >> $GITHUB_ENV

      - name: Set ref staging
        if: github.event.action == 'data-update-staging'
        run: |
          echo "REPO_DISPATCH_REF=main" >> $GITHUB_ENV

      - name: Get latest tag
        if: github.event.action == 'data-update-production'
        uses: oprypin/find-latest-tag@v1
        with:
          repository: The-Academic-Observatory/coki-oa-web
          releases-only: true
        id: get_latest_tag

      - name: Set ref production
        if: github.event.action == 'data-update-production'
        run: |
          echo "REPO_DISPATCH_REF=${{ steps.get_latest_tag.outputs.tag }}" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        if: startsWith(github.event.action, 'data-update')
        with:
          ref: ${{ env.REPO_DISPATCH_REF }}

      - name: Print Current Checked Out Ref
        run: |
          git symbolic-ref -q --short HEAD || git describe --tags --exact-match

#      - name: Setup NodeJS
#        uses: actions/setup-node@v2
#        with:
#          node-version: 14
#
#      - name: Install dependencies
#        run: |
#          yarn install
#
#      - name: Auth
#        uses: google-github-actions/auth@v0
#        with:
#          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
#
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@v0
#
#      - name: Download and Extract Data
#        env:
#          DATASET_VERSION: v1
#          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
#        run: |
#          gsutil cp gs://${BUCKET_NAME}/${DATASET_VERSION}/latest.zip latest.zip
#          ./data.sh
#
#      - name: Build and Export
#        env:
#          DATA_PATH: ./latest/data
#        run: |
#          yarn build
#          yarn export
#
#      - name: Save wrangler.toml
#        env:
#          WRANGLER_CONFIG: ${{ secrets.WRANGLER_CONFIG }}
#        run: |
#          echo "${WRANGLER_CONFIG}" > wrangler.toml
#
#      - name: Publish to Cloudflare
#        uses: cloudflare/wrangler-action@1.3.0
#        with:
#          apiToken: ${{ secrets.CF_API_TOKEN }}
#          environment: ${{ env.ENVIRONMENT }}